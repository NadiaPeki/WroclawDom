{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\New project\\\\src\\\\components\\\\Posts\\\\Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Input from '../Input/Input';\nimport FilteredPosts from '../FilteredPosts/FilteredPosts';\nimport FullPost from '../FullPost/FullPost'; // Импортируем компонент FullPost\nimport postsData from './postsData';\nimport styles from './Posts.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst filterPosts = (allPosts, searchText) => {\n  return allPosts.filter(post => post.title.toLowerCase().includes(searchText.toLowerCase()) || post.text.toLowerCase().includes(searchText.toLowerCase()) || post.date.toLowerCase().includes(searchText.toLowerCase()));\n};\nconst Posts = () => {\n  _s();\n  const [searchText, setSearchText] = useState('');\n  const [filteredPosts, setFilteredPosts] = useState(postsData);\n  const [selectedPostId, setSelectedPostId] = useState(null); // Добавляем состояние для хранения ID выбранного поста\n\n  const history = useHistory();\n  const handleSearch = text => {\n    setSearchText(text);\n    setFilteredPosts(prevPosts => filterPosts(prevPosts, text));\n  };\n\n  // Обработчик для перехода к полному посту\n  const handlePostClick = postId => {\n    setSelectedPostId(postId);\n    history.push(`/posts/${postId}`);\n  };\n  useEffect(() => {\n    // При изменении searchText сбрасываем выбранный пост\n    setSelectedPostId(null);\n  }, [searchText]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.input,\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        onSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), selectedPostId ? /*#__PURE__*/_jsxDEV(FullPost, {\n      postId: selectedPostId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // Иначе отображаем отфильтрованные посты\n    _jsxDEV(FilteredPosts, {\n      filteredPosts: filteredPosts,\n      onPostClick: handlePostClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"bvp9u0XMlh2+Dw9s4xRivCtvPsY=\", false, function () {\n  return [useHistory];\n});\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","useEffect","useHistory","Input","FilteredPosts","FullPost","postsData","styles","jsxDEV","_jsxDEV","filterPosts","allPosts","searchText","filter","post","title","toLowerCase","includes","text","date","Posts","_s","setSearchText","filteredPosts","setFilteredPosts","selectedPostId","setSelectedPostId","history","handleSearch","prevPosts","handlePostClick","postId","push","className","wrapper","children","input","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","onPostClick","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/New project/src/components/Posts/Posts.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Input from '../Input/Input';\r\nimport FilteredPosts from '../FilteredPosts/FilteredPosts';\r\nimport FullPost from '../FullPost/FullPost'; // Импортируем компонент FullPost\r\nimport postsData from './postsData';\r\nimport styles from './Posts.module.css';\r\n\r\nconst filterPosts = (allPosts, searchText) => {\r\n  return allPosts.filter((post) =>\r\n    post.title.toLowerCase().includes(searchText.toLowerCase()) ||\r\n    post.text.toLowerCase().includes(searchText.toLowerCase()) ||\r\n    post.date.toLowerCase().includes(searchText.toLowerCase())\r\n  );\r\n};\r\n\r\nconst Posts = () => {\r\n  const [searchText, setSearchText] = useState('');\r\n  const [filteredPosts, setFilteredPosts] = useState(postsData);\r\n  const [selectedPostId, setSelectedPostId] = useState(null); // Добавляем состояние для хранения ID выбранного поста\r\n\r\n  const history = useHistory();\r\n\r\n  const handleSearch = (text) => {\r\n    setSearchText(text);\r\n    setFilteredPosts((prevPosts) => filterPosts(prevPosts, text));\r\n  };\r\n\r\n  // Обработчик для перехода к полному посту\r\n  const handlePostClick = (postId) => {\r\n    setSelectedPostId(postId);\r\n    history.push(`/posts/${postId}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // При изменении searchText сбрасываем выбранный пост\r\n    setSelectedPostId(null);\r\n  }, [searchText]);\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.input}>\r\n        <Input onSearch={handleSearch} />\r\n      </div>\r\n\r\n      {/* Если выбран пост, отображаем FullPost */}\r\n      {selectedPostId ? (\r\n        <FullPost postId={selectedPostId} />\r\n      ) : (\r\n        // Иначе отображаем отфильтрованные посты\r\n        <FilteredPosts filteredPosts={filteredPosts} onPostClick={handlePostClick} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}