{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\New project\\\\src\\\\components\\\\FullPost\\\\FullPost.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport posts from '../Posts/postsData';\nimport styles from './FullPost.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FullPost = () => {\n  _s();\n  const {\n    postId\n  } = useParams();\n\n  // Преобразуем postId к числу\n  const selectedPost = posts.find(post => post.id === parseInt(postId));\n  console.log('selectedPost:', selectedPost);\n  if (!selectedPost) {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Post not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n  const {\n    title,\n    imageUrl,\n    text\n  } = selectedPost;\n  const shareOnInstagram = () => {\n    const encodedText = encodeURIComponent(`Check out this post: ${title}`);\n    const encodedUrl = encodeURIComponent(window.location.href);\n    window.open(`https://www.instagram.com/share?url=${encodedUrl}&text=${encodedText}`);\n  };\n  const shareOnTelegram = () => {\n    const encodedText = encodeURIComponent(`Check out this post: ${title}`);\n    const encodedUrl = encodeURIComponent(window.location.href);\n    window.open(`https://t.me/share/url?url=${encodedUrl}&text=${encodedText}`);\n  };\n  const shareOnFacebook = () => {\n    const encodedUrl = encodeURIComponent(window.location.href);\n    window.open(`https://www.facebook.com/sharer/sharer.php?u=${encodedUrl}`);\n  };\n  const shareByEmail = () => {\n    const encodedSubject = encodeURIComponent(`Check out this post: ${title}`);\n    const encodedBody = encodeURIComponent(`I thought you might be interested in this post: ${window.location.href}`);\n    window.location.href = `mailto:?subject=${encodedSubject}&body=${encodedBody}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.fullPostWrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.fullPostContent,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: title,\n        className: styles.fullPostImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 2\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(FullPost, \"zY00sTkH8LAD3YdIJE1pP6vQWzg=\", false, function () {\n  return [useParams];\n});\n_c = FullPost;\nexport default FullPost;\nvar _c;\n$RefreshReg$(_c, \"FullPost\");","map":{"version":3,"names":["React","useParams","posts","styles","jsxDEV","_jsxDEV","FullPost","_s","postId","selectedPost","find","post","id","parseInt","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","title","imageUrl","text","shareOnInstagram","encodedText","encodeURIComponent","encodedUrl","window","location","href","open","shareOnTelegram","shareOnFacebook","shareByEmail","encodedSubject","encodedBody","className","fullPostWrapper","fullPostContent","src","alt","fullPostImage","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/New project/src/components/FullPost/FullPost.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport posts from '../Posts/postsData';\r\nimport styles from './FullPost.module.css'\r\n\r\nconst FullPost = () => {\r\n  const { postId } = useParams();\r\n \r\n\r\n  // Преобразуем postId к числу\r\n  const selectedPost = posts.find(post => post.id === parseInt(postId));\r\n\r\n  console.log('selectedPost:', selectedPost); \r\n\r\n  if (!selectedPost) {\r\n    return <h3>Post not found</h3>;\r\n  }\r\n\r\n  const { title, imageUrl, text } = selectedPost;\r\n\r\n  const shareOnInstagram = () => {\r\n    const encodedText = encodeURIComponent(`Check out this post: ${title}`);\r\n    const encodedUrl = encodeURIComponent(window.location.href);\r\n    window.open(`https://www.instagram.com/share?url=${encodedUrl}&text=${encodedText}`);\r\n  };\r\n\r\n  const shareOnTelegram = () => {\r\n    const encodedText = encodeURIComponent(`Check out this post: ${title}`);\r\n    const encodedUrl = encodeURIComponent(window.location.href);\r\n    window.open(`https://t.me/share/url?url=${encodedUrl}&text=${encodedText}`);\r\n  };\r\n\r\n  const shareOnFacebook = () => {\r\n    const encodedUrl = encodeURIComponent(window.location.href);\r\n    window.open(`https://www.facebook.com/sharer/sharer.php?u=${encodedUrl}`);\r\n  };\r\n\r\n  const shareByEmail = () => {\r\n    const encodedSubject = encodeURIComponent(`Check out this post: ${title}`);\r\n    const encodedBody = encodeURIComponent(`I thought you might be interested in this post: ${window.location.href}`);\r\n    window.location.href = `mailto:?subject=${encodedSubject}&body=${encodedBody}`;\r\n  };\r\n\r\n  return (\r\n    <div className={styles.fullPostWrapper}>\r\n <div className={styles.fullPostContent}>\r\n      <h3>{title}</h3>\r\n      <img src={imageUrl} alt={title} className={styles.fullPostImage} />\r\n      <p>{text}</p>\r\n      \r\n    </div>\r\n    </div>\r\n   \r\n  );\r\n}\r\n\r\nexport default FullPost;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}