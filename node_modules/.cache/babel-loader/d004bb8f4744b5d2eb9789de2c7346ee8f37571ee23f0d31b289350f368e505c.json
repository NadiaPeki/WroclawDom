{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\New project\\\\src\\\\components\\\\FullPost\\\\FullPost.jsx\",\n  _s = $RefreshSig$();\nimport { useParams } from 'react-router-dom';\nimport Post from '../Post/Post';\nimport posts from '../Posts/postsData'; // Импортируйте свои данные постов или используйте API\nimport './FullPost.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FullPost = () => {\n  _s();\n  const {\n    postId\n  } = useParams();\n  console.log('postId:', postId);\n  const selectedPost = posts.find(post => post.id === parseInt(postId));\n  console.log('selectedPost:', selectedPost);\n  if (!selectedPost) {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u041F\\u043E\\u0441\\u0442 \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n  const {\n    title,\n    imageUrl,\n    text\n  } = selectedPost;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageUrl,\n      alt: title,\n      className: \"post-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Post, {\n      post: selectedPost,\n      showFullPost: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(FullPost, \"zY00sTkH8LAD3YdIJE1pP6vQWzg=\", false, function () {\n  return [useParams];\n});\n_c = FullPost;\nexport default FullPost;\nvar _c;\n$RefreshReg$(_c, \"FullPost\");","map":{"version":3,"names":["useParams","Post","posts","jsxDEV","_jsxDEV","FullPost","_s","postId","console","log","selectedPost","find","post","id","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","title","imageUrl","text","className","src","alt","showFullPost","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/New project/src/components/FullPost/FullPost.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport Post from '../Post/Post';\r\nimport posts from '../Posts/postsData'; // Импортируйте свои данные постов или используйте API\r\nimport './FullPost.css'\r\nconst FullPost = () => {\r\n  const { postId } = useParams();\r\n  console.log('postId:', postId)\r\n  const selectedPost = posts.find(post => post.id === parseInt(postId));\r\n  console.log('selectedPost:', selectedPost); \r\n\r\n  if (!selectedPost) {\r\n    return <h3>Пост не найден</h3>;\r\n  }\r\n\r\n  const { title, imageUrl, text } = selectedPost;\r\n\r\n  return (\r\n    <div className=\"post\">\r\n      <h3>{title}</h3>\r\n      <img src={imageUrl} alt={title} className=\"post-image\" />\r\n      <p>{text}</p>\r\n      {/* Рендерим компонент Post с полным текстом для сравнения */}\r\n      <Post post={selectedPost} showFullPost={() => {}} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FullPost;"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,KAAK,MAAM,oBAAoB,CAAC,CAAC;AACxC,OAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACvB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAO,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC9BQ,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,MAAM,CAAC;EAC9B,MAAMG,YAAY,GAAGR,KAAK,CAACS,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKC,QAAQ,CAACP,MAAM,CAAC,CAAC;EACrEC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEC,YAAY,CAAC;EAE1C,IAAI,CAACA,YAAY,EAAE;IACjB,oBAAON,OAAA;MAAAW,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAChC;EAEA,MAAM;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAK,CAAC,GAAGZ,YAAY;EAE9C,oBACEN,OAAA;IAAKmB,SAAS,EAAC,MAAM;IAAAR,QAAA,gBACnBX,OAAA;MAAAW,QAAA,EAAKK;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChBf,OAAA;MAAKoB,GAAG,EAAEH,QAAS;MAACI,GAAG,EAAEL,KAAM;MAACG,SAAS,EAAC;IAAY;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzDf,OAAA;MAAAW,QAAA,EAAIO;IAAI;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEbf,OAAA,CAACH,IAAI;MAACW,IAAI,EAAEF,YAAa;MAACgB,YAAY,EAAEA,CAAA,KAAM,CAAC;IAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEV,CAAC;AAAAb,EAAA,CArBKD,QAAQ;EAAA,QACOL,SAAS;AAAA;AAAA2B,EAAA,GADxBtB,QAAQ;AAuBd,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}