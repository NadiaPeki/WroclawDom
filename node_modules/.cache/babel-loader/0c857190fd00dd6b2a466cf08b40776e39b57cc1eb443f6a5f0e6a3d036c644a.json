{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\New project\\\\src\\\\components\\\\Posts\\\\Posts.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Post from '../Post/Post';\nimport Input from '../Input/Input';\nimport styles from './Posts.module.css';\nimport posts from './postsData'; // Импортируем массив постов\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [searchText, setSearchText] = useState('');\n  const [filteredPosts, setFilteredPosts] = useState(posts);\n  const handleSearch = searchText => {\n    // Фильтрация постов по тексту поиска (заголовок, текст и дата)\n    const filtered = posts.filter(post => `${post.title} ${post.text} ${post.date}`.toLowerCase().includes(searchText.toLowerCase()));\n    setFilteredPosts(filtered);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.input,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        onSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), filteredPosts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.posts,\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"jhKKCdiXAaU4T/yoOKYYdBJmMIs=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useState","Post","Input","styles","posts","jsxDEV","_jsxDEV","Posts","_s","searchText","setSearchText","filteredPosts","setFilteredPosts","handleSearch","filtered","filter","post","title","text","date","toLowerCase","includes","className","wrapper","children","input","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","map","id","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/New project/src/components/Posts/Posts.jsx"],"sourcesContent":["import {useState} from 'react';\r\nimport Post from '../Post/Post';\r\nimport Input from '../Input/Input';\r\nimport styles from './Posts.module.css'\r\nimport posts from './postsData'; // Импортируем массив постов\r\n\r\n  const Posts = () => {\r\n    const [searchText, setSearchText] = useState('');\r\n    const [filteredPosts, setFilteredPosts] = useState(posts);\r\n\r\n  \r\n    const handleSearch = (searchText) => {\r\n      // Фильтрация постов по тексту поиска (заголовок, текст и дата)\r\n      const filtered = posts.filter((post) =>\r\n        `${post.title} ${post.text} ${post.date}`.toLowerCase().includes(searchText.toLowerCase())\r\n      );\r\n  \r\n      setFilteredPosts(filtered);\r\n    };\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.input}>\r\n      <Input onSearch={handleSearch}/>\r\n      {filteredPosts.map((post) => (\r\n        <Post key={post.id} post={post} />\r\n      ))}\r\n      </div>\r\n<div className={styles.posts}> \r\n      {posts.map((post) => (\r\n        <Post key={post.id} post={post} />\r\n      ))}\r\n    </div>\r\n    </div>\r\n      \r\n  \r\n  );\r\n}\r\n\r\nexport default Posts;"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,KAAK,MAAM,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAACI,KAAK,CAAC;EAGzD,MAAMS,YAAY,GAAIJ,UAAU,IAAK;IACnC;IACA,MAAMK,QAAQ,GAAGV,KAAK,CAACW,MAAM,CAAEC,IAAI,IAChC,GAAEA,IAAI,CAACC,KAAM,IAAGD,IAAI,CAACE,IAAK,IAAGF,IAAI,CAACG,IAAK,EAAC,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACZ,UAAU,CAACW,WAAW,CAAC,CAAC,CAC3F,CAAC;IAEDR,gBAAgB,CAACE,QAAQ,CAAC;EAC5B,CAAC;EAEH,oBACER,OAAA;IAAKgB,SAAS,EAAEnB,MAAM,CAACoB,OAAQ;IAAAC,QAAA,gBAC7BlB,OAAA;MAAKgB,SAAS,EAAEnB,MAAM,CAACsB,KAAM;MAAAD,QAAA,gBAC7BlB,OAAA,CAACJ,KAAK;QAACwB,QAAQ,EAAEb;MAAa;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,EAC/BnB,aAAa,CAACoB,GAAG,CAAEf,IAAI,iBACtBV,OAAA,CAACL,IAAI;QAAee,IAAI,EAAEA;MAAK,GAApBA,IAAI,CAACgB,EAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAClC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACZxB,OAAA;MAAKgB,SAAS,EAAEnB,MAAM,CAACC,KAAM;MAAAoB,QAAA,EACtBpB,KAAK,CAAC2B,GAAG,CAAEf,IAAI,iBACdV,OAAA,CAACL,IAAI;QAAee,IAAI,EAAEA;MAAK,GAApBA,IAAI,CAACgB,EAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAIV,CAAC;AAAAtB,EAAA,CA/BOD,KAAK;AAAA0B,EAAA,GAAL1B,KAAK;AAiCb,eAAeA,KAAK;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}