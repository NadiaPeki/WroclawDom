{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\New project\\\\src\\\\components\\\\Posts\\\\Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Input from '../Input/Input';\nimport FilteredPosts from '../FilteredPosts/FilteredPosts';\nimport postsData from './postsData';\nimport styles from './Posts.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = () => {\n  _s();\n  const [searchText, setSearchText] = useState('');\n  const [filteredPosts, setFilteredPosts] = useState(postsData);\n  const handleSearch = text => {\n    setSearchText(text);\n\n    // Фильтруем посты по введенному тексту\n    const filtered = postsData.filter(post => post.title.toLowerCase().includes(text.toLowerCase()) || post.text.toLowerCase().includes(text.toLowerCase()) || post.date.toLowerCase().includes(text.toLowerCase()));\n\n    // Устанавливаем отфильтрованные посты в состояние\n    setFilteredPosts(filtered);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.input,\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        onSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilteredPosts, {\n      filteredPosts: searchText ? filteredPosts : postsData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"LBvnMIwfrqiQ37roAOeD8B6JbDc=\");\n_c = Posts;\nexport default Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useState","Input","FilteredPosts","postsData","styles","jsxDEV","_jsxDEV","Posts","_s","searchText","setSearchText","filteredPosts","setFilteredPosts","handleSearch","text","filtered","filter","post","title","toLowerCase","includes","date","className","wrapper","children","input","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/New project/src/components/Posts/Posts.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Input from '../Input/Input';\r\nimport FilteredPosts from '../FilteredPosts/FilteredPosts';\r\nimport postsData from './postsData';\r\nimport styles from './Posts.module.css';\r\n\r\nconst Posts = () => {\r\n  const [searchText, setSearchText] = useState('');\r\n  const [filteredPosts, setFilteredPosts] = useState(postsData);\r\n\r\n  const handleSearch = (text) => {\r\n    setSearchText(text);\r\n\r\n    // Фильтруем посты по введенному тексту\r\n    const filtered = postsData.filter((post) =>\r\n      post.title.toLowerCase().includes(text.toLowerCase()) ||\r\n      post.text.toLowerCase().includes(text.toLowerCase()) ||\r\n      post.date.toLowerCase().includes(text.toLowerCase())\r\n    );\r\n\r\n    // Устанавливаем отфильтрованные посты в состояние\r\n    setFilteredPosts(filtered);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <div className={styles.input}>\r\n        <Input onSearch={handleSearch} />\r\n      </div>\r\n      <FilteredPosts filteredPosts={searchText ? filteredPosts : postsData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,MAAM,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAACG,SAAS,CAAC;EAE7D,MAAMU,YAAY,GAAIC,IAAI,IAAK;IAC7BJ,aAAa,CAACI,IAAI,CAAC;;IAEnB;IACA,MAAMC,QAAQ,GAAGZ,SAAS,CAACa,MAAM,CAAEC,IAAI,IACrCA,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACN,IAAI,CAACK,WAAW,CAAC,CAAC,CAAC,IACrDF,IAAI,CAACH,IAAI,CAACK,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACN,IAAI,CAACK,WAAW,CAAC,CAAC,CAAC,IACpDF,IAAI,CAACI,IAAI,CAACF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACN,IAAI,CAACK,WAAW,CAAC,CAAC,CACrD,CAAC;;IAED;IACAP,gBAAgB,CAACG,QAAQ,CAAC;EAC5B,CAAC;EAED,oBACET,OAAA;IAAKgB,SAAS,EAAElB,MAAM,CAACmB,OAAQ;IAAAC,QAAA,gBAC7BlB,OAAA;MAAKgB,SAAS,EAAElB,MAAM,CAACqB,KAAM;MAAAD,QAAA,eAC3BlB,OAAA,CAACL,KAAK;QAACyB,QAAQ,EAAEb;MAAa;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACNxB,OAAA,CAACJ,aAAa;MAACS,aAAa,EAAEF,UAAU,GAAGE,aAAa,GAAGR;IAAU;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrE,CAAC;AAEV,CAAC;AAACtB,EAAA,CA1BID,KAAK;AAAAwB,EAAA,GAALxB,KAAK;AA4BX,eAAeA,KAAK;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}